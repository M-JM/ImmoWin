// <auto-generated />
using System;
using ImmoWin.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ImmoWin.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200926131329_newBuildingType")]
    partial class newBuildingType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ImmoWin.DAL.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Floor")
                        .HasColumnType("int");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zipcode")
                        .HasColumnType("int");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            City = "Genk",
                            Country = "Belgium",
                            HouseNumber = 12,
                            Street = "NeerStraat",
                            Zipcode = 3000
                        },
                        new
                        {
                            AddressId = 2,
                            City = "Antwerpen",
                            Country = "Belgium",
                            HouseNumber = 32,
                            Street = "ZijStraat",
                            Zipcode = 4510
                        },
                        new
                        {
                            AddressId = 3,
                            City = "Mechelen",
                            Country = "Belgium",
                            Floor = 1,
                            HouseNumber = 5,
                            Street = "OpStraat",
                            Zipcode = 2000
                        },
                        new
                        {
                            AddressId = 4,
                            City = "Mechelen",
                            Country = "Belgium",
                            Floor = 2,
                            HouseNumber = 5,
                            Street = "OpStraat",
                            Zipcode = 2000
                        });
                });

            modelBuilder.Entity("ImmoWin.DAL.Models.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("BuildingTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("BuildingId");

                    b.HasIndex("AddressId");

                    b.HasIndex("BuildingTypeId");

                    b.ToTable("Buildings");

                    b.HasData(
                        new
                        {
                            BuildingId = 1,
                            AddressId = 1,
                            BuildingTypeId = 2,
                            Price = 100000
                        },
                        new
                        {
                            BuildingId = 2,
                            AddressId = 2,
                            BuildingTypeId = 3,
                            Price = 756000
                        },
                        new
                        {
                            BuildingId = 3,
                            AddressId = 3,
                            BuildingTypeId = 5,
                            Price = 500000
                        },
                        new
                        {
                            BuildingId = 4,
                            AddressId = 4,
                            BuildingTypeId = 1,
                            Price = 250000
                        });
                });

            modelBuilder.Entity("ImmoWin.DAL.Models.BuildingType", b =>
                {
                    b.Property<int>("BuildingTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BuildingTypeId");

                    b.ToTable("BuildingTypes");

                    b.HasData(
                        new
                        {
                            BuildingTypeId = 1,
                            Name = "Appartement",
                            Type = "Studio"
                        },
                        new
                        {
                            BuildingTypeId = 2,
                            Name = "Huis",
                            Type = "Rijhuis"
                        },
                        new
                        {
                            BuildingTypeId = 3,
                            Name = "Huis",
                            Type = "Alleenstaand Huis"
                        },
                        new
                        {
                            BuildingTypeId = 4,
                            Name = "Huis",
                            Type = "Villa"
                        },
                        new
                        {
                            BuildingTypeId = 5,
                            Name = "Appartement",
                            Type = "Loft"
                        });
                });

            modelBuilder.Entity("ImmoWin.DAL.Models.Building", b =>
                {
                    b.HasOne("ImmoWin.DAL.Models.Address", "Address")
                        .WithMany("Buildings")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImmoWin.DAL.Models.BuildingType", "BuildingType")
                        .WithMany("Buildings")
                        .HasForeignKey("BuildingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
